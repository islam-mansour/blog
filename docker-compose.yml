version: '3.8'

services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    restart: always
    volumes:
      - dbdata:/var/lib/postgresql/data/
    env_file:
      - .env
    networks:
      - internal

  web:
    restart: always
    build: ./blog
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
        - ./blog:/usr/src/app
    ports:
      - 8000:8000
    depends_on:
      - db
      - kafka
    env_file:
      - .env
    networks:
      - internal

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
      - "2181"
    networks:
      - internal

  kafka:
    image: wurstmeister/kafka:2.11-2.0.0
    depends_on:
    - zookeeper
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1,comments:1:1"
    networks:
      - internal

  redis:
    image: redis:alpine
    networks:
      - internal
  celery:
    build: ./blog
    command: celery -A core worker -l info
    volumes:
      - ./blog/:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
    networks:
      - internal
  celery-beat:
    build: ./blog
    command: celery -A core beat -l info
    volumes:
      - ./blog/:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
    networks:
      - internal

volumes:
  dbdata:

networks:
  internal:
    name: internal
    driver: bridge